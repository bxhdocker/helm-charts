{{- if .Capabilities.APIVersions.Has "vcenter-operator.stable.sap.cc/v1" }}
apiVersion: vcenter-operator.stable.sap.cc/v1
kind: VCenterTemplate
metadata:
  name: 'vcenter-cluster-nova-compute-deployment'
  scope: 'cluster'
  jinja2_options:
    variable_start_string: '{='
    variable_end_string: '=}'
template: |
  apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: nova-compute-{= name =}
    labels:
      system: openstack
      type: backend
      component: nova
  spec:
    replicas: 1
    revisionHistoryLimit: 5
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    selector:
      matchLabels:
          name: nova-compute-{= name =}
    template:
      metadata:
        labels:
{{ tuple . "nova" "compute" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 10 }}
          name: nova-compute-{= name =}
          hypervisor: "vmware"
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9102"
          configmap-etc-hash: {{ include (print .Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
          configmap-nova-compute-hash: {= "vcenter_cluster/{{ .Release.Namespace }}/vcenter-cluster-nova-compute-configmap.yaml.j2" | render | sha256sum =}
      spec:
        containers:
        - name: nova-compute
          image: {{ .Values.global.imageRegistry }}/{{ .Values.global.image_namespace }}/ubuntu-source-nova-compute:{{ .Values.imageVersionNovaCompute | default .Values.imageVersionNova | default .Values.imageVersion | required "Please set .imageVersion or similar" }}
          imagePullPolicy: IfNotPresent
          terminationGracePeriodSeconds: 900
          command:
          - dumb-init
          - kubernetes-entrypoint
          env:
          - name: COMMAND
            value: "nova-compute"
          - name: NAMESPACE
            value: {{ .Release.Namespace }}
          - name: SENTRY_DSN
            value: {{ .Values.sentry_dsn | quote }}
          - name: STATSD_HOST
            value: "localhost"
          - name: STATSD_PORT
            value: "9125"
          - name: PYTHONWARNINGS
            value: "ignore:Unverified HTTPS request"
          - name: PGAPPNAME
            value: nova-compute-{= name =}
          volumeMounts:
          - mountPath: /etc/nova
            name: etcnova
          - mountPath: /etc/nova/nova.conf
            name: nova-etc
            subPath: nova.conf
            readOnly: true
          - mountPath: /etc/nova/policy.json
            name: nova-etc
            subPath: policy.json
            readOnly: true
          - mountPath: /etc/nova/logging.ini
            name: nova-etc
            subPath: logging.ini
            readOnly: true
          - mountPath: /etc/nova/nova-compute.conf
            name: hypervisor-config
            subPath: nova-compute.conf
            readOnly: true
          - mountPath: /etc/sudoers
            name: nova-etc
            subPath: sudoers
            readOnly: true
          - mountPath: /etc/nova/rootwrap.conf
            name: nova-etc
            subPath: rootwrap.conf
            readOnly: true
          - mountPath: /etc/nova/rootwrap.d/compute.filters
            name: nova-etc
            subPath: compute.filters
            readOnly: true
        - name: statsd
          image: prom/statsd-exporter:v0.5.0
          imagePullPolicy: IfNotPresent
          ports:
          - name: statsd
            containerPort: 9125
            protocol: UDP
          - name: metrics
            containerPort: 9102
        volumes:
        - name: etcnova
          emptyDir: {}
        - name: nova-etc
          configMap:
            name: nova-etc
        - name: hypervisor-config
          configMap:
            name: nova-compute-vmware-{= name =}
{{- end }}
